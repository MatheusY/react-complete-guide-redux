{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increment: state => {\n      state.counter++;\n    },\n    decrement: state => {\n      state.counter--;\n    },\n    increase: (state, action) => {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: {\n    isAuthenticated: false\n  },\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logoff(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/matheus/Dev/Projects/react-complete-guide-redux/src/store/index.js"],"names":["createSlice","configureStore","counterSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","isAuthenticated","login","logoff","store","reducer","auth","counterActions","actions","authActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAC/BG,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GAFiB;AAG/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACJ,OAAN;AACD,KAHO;AAIRK,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACJ,OAAN;AACD,KANO;AAORM,IAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAC3BH,MAAAA,KAAK,CAACJ,OAAN,GAAgBI,KAAK,CAACJ,OAAN,GAAgBO,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACH,WAAN,GAAoB,CAACG,KAAK,CAACH,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMS,SAAS,GAAGf,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAE;AAAEY,IAAAA,eAAe,EAAE;AAAnB,GAFc;AAG5BT,EAAAA,QAAQ,EAAE;AACRU,IAAAA,KAAK,CAACR,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACD,KAHO;;AAKRE,IAAAA,MAAM,CAACT,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACD;;AAPO;AAHkB,CAAD,CAA7B;AAcA,MAAMG,KAAK,GAAGlB,cAAc,CAAC;AAC3BmB,EAAAA,OAAO,EAAE;AAAEf,IAAAA,OAAO,EAAEH,YAAY,CAACkB,OAAxB;AAAiCC,IAAAA,IAAI,EAAEN,SAAS,CAACK;AAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGpB,YAAY,CAACqB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGT,SAAS,CAACQ,OAA9B;AAEP,eAAeJ,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: { counter: 0, showCounter: true },\n  reducers: {\n    increment: (state) => {\n      state.counter++;\n    },\n    decrement: (state) => {\n      state.counter--;\n    },\n    increase: (state, action) => {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: { isAuthenticated: false },\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logoff(state) {\n      state.isAuthenticated = false;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}