{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\ncreateSlice({\n  name: \"counter\",\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increment: state => {\n      state.counter++;\n    },\n    decrement: state => {\n      state.counter--;\n    },\n    increase: (state, action) => {\n      state.counter = state.counter + action.amount;\n    },\n\n    toddlgeCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/matheus/Dev/Projects/react-complete-guide-redux/src/store/index.js"],"names":["createStore","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","amount","toddlgeCounter","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEAA,WAAW,CAAC;AACVC,EAAAA,IAAI,EAAE,SADI;AAEVC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GAFJ;AAGVC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACJ,OAAN;AACD,KAHO;AAIRK,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACJ,OAAN;AACD,KANO;AAORM,IAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAC3BH,MAAAA,KAAK,CAACJ,OAAN,GAAgBI,KAAK,CAACJ,OAAN,GAAgBO,MAAM,CAACC,MAAvC;AACD,KATO;;AAURC,IAAAA,cAAc,CAACL,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACH,WAAN,GAAoB,CAACG,KAAK,CAACH,WAA3B;AACD;;AAZO;AAHA,CAAD,CAAX;AAmBA,MAAMF,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;;AAEA,MAAMS,cAAc,GAAG,CAACN,KAAK,GAAGL,YAAT,EAAuBQ,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLX,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEG,KAAK,CAACH;AAFd,KAAP;AAID;;AAED,MAAIM,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLX,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBO,MAAM,CAACC,MAD3B;AAELP,MAAAA,WAAW,EAAEG,KAAK,CAACH;AAFd,KAAP;AAID;;AAED,MAAIM,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLX,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEG,KAAK,CAACH;AAFd,KAAP;AAID;;AAED,MAAIM,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLV,MAAAA,WAAW,EAAE,CAACG,KAAK,CAACH,WADf;AAELD,MAAAA,OAAO,EAAEI,KAAK,CAACJ;AAFV,KAAP;AAID;;AAED,SAAOI,KAAP;AACD,CA9BD;;AAgCA,MAAMQ,KAAK,GAAGhB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\ncreateSlice({\n  name: \"counter\",\n  initialState: { counter: 0, showCounter: true },\n  reducers: {\n    increment: (state) => {\n      state.counter++;\n    },\n    decrement: (state) => {\n      state.counter--;\n    },\n    increase: (state, action) => {\n      state.counter = state.counter + action.amount;\n    },\n    toddlgeCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}